#!/usr/bin/env bash
# Usage:
# git-miro [pr|pull-request]
# git-miro open

set -e

PLATFORM=$(uname)
UNSUPPORTED_MSG="PLATFORM not supported"
PARSE_ERROR_MSG="Couldn't parse URL"

function get_url() {
  local url=$(git config --get remote.origin.url | awk '{$1=$1;print}')

  # This regex is a bit naive, only works with the SSH URL, it doesn't work for the HTTPS one, yet
  local re="([A-Za-z0-9_]+:\/\/)(.+@)*([A-Za-z0-9_\.]+)(:[0-9]+){0,1}\/(.*)\/(.*)\.git(\/)?"

  if [[ $url =~ $re ]]; then
    local hostname=${BASH_REMATCH[3]}
    local project=${BASH_REMATCH[5]}
    local repo=${BASH_REMATCH[6]}

    if [[ -z "$hostname" ]]; then
      printf ""
      exit 1
    fi

    printf "https://%s/projects/%s/repos/%s" "$hostname" "$project" "${1:-$repo}"
  else
    printf ""
    exit 1
  fi
}

function pull_request() {
  local base_url=$(get_url)
  local branch_name=$(git symbolic-ref HEAD)

  if [[ -z "$base_url" ]]; then
    echo "$PARSE_ERROR_MSG"
    exit 1
  else
    local pr_url=$(printf "%s/pull-requests?create&sourceBranch=%s&targetBranch=%s" "$base_url" "$branch_name" "${1:-master}")

    printf "Opening pull-request at %s\n" "$pr_url"

    if [[ "$PLATFORM" == 'Darwin' ]]; then
      open "$pr_url"
    else
      echo "$UNSUPPORTED_MSG"
      exit 1
    fi
  fi
}

function open_repo() {
  local base_url=$(get_url "$1")

  if [[ -z "$base_url" ]]; then
    echo "$PARSE_ERROR_MSG"
    exit 1
  else
    if [[ "$PLATFORM" == 'Darwin' ]]; then
      open "$base_url"
    else
      echo "$UNSUPPORTED_MSG"
      exit 1
    fi
  fi
}

function usage() {
  cat <<HELP

USAGE:   git-miro [COMMAND]

COMMANDS:

        open [repo]               - Opens the repo homepage
        pr|pull-request [branch]  - Opens the browser with pull-request page ready to fill in info directly
HELP
  exit 1
}

[ $# -eq 0 ] && {
  usage
}

case "$1" in
pr | pull-request)
  pull_request "${@:2}"
  ;;
open)
  open_repo "${@:2}"
  ;;
help | -h | --help)
  usage
  ;;
*)
  echo ""
  echo "Only open, pr & pull-request commands are supported"
  usage
  ;;
esac
