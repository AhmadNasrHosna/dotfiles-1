# vim: ft=tmux tw=0

# Enable true color support, the terminal info is from the outside of tmux
# https://sunaku.github.io/tmux-24bit-color.html#usage
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g prefix2 C-a                        # GNU-Screen compatible prefix
bind C-a send-prefix -2

set -g history-limit 100000

# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -s escape-time 0
# Allow the arrow key to be used immediately after changing windows
set -sg repeat-time 0
set -g focus-events on

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1
setw -g automatic-rename on
set -g renumber-windows on # re-number windows when one is closed
set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'
set -g display-time 1500 # tmux messages are displayed for 1.5 seconds
set -g display-panes-time 800 # slightly longer pane indicators display time

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# loud or quiet?
setw -g monitor-activity on
set -g visual-activity on
# set -g visual-bell off
# set -g bell-action none

# use vim keybindings in copy mode
setw -g mode-keys vi
setw -g other-pane-height 25
setw -g other-pane-width 80


# provide access to the clipboard for pbpaste, pbcopy
set -g default-shell $SHELL
set -g default-command "reattach-to-user-namespace -l ${SHELL}"

# decrease command delay (increases vim responsiveness)
set -sg escape-time 1

# =======================================================================
# = Key Bindings
# =======================================================================

# Make the current window the first window
bind-key T swap-window -t 1

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# reload ~/.tmux.conf using PREFIX r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# https://github.com/christoomey/vim-tmux-navigator
# https://blog.bugsnag.com/tmux-and-vim/
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
is_fzf="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "($is_vim || $is_fzf)" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "($is_vim || $is_fzf)" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# mouse behavior
set -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind-key -n WheelDownPane select-pane -t= \; send-keys -M

# Quick kill-session
bind-key C-q confirm-before 'kill-session'
bind-key : command-prompt
bind-key l choose-tree -u

bind-key -n S-Right next-window
bind-key -n S-Left previous-window

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key C-o rotate-window
bind-key C-l send-keys 'C-l'

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

# bind-key a last-pane
bind-key q display-panes

unbind-key c
bind-key c new-window -c '#{pane_current_path}'

# Resizing (mouse also works).
unbind-key Left
bind-key -r Left resize-pane -L 5
unbind-key Right
bind-key -r Right resize-pane -R 5
unbind-key Down
bind-key -r Down resize-pane -D 5
unbind-key Up
bind-key -r Up resize-pane -U 5

# Switch to a window by Alt-n
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# https://github.com/zanshin/dotfiles/blob/master/tmux/tmux.conf
# ---------------------
# Copy & Paste
# ---------------------
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Save entire tmux history to a file - file will be on machine where tmux is
# running
bind-key * command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# -- buffers -------------------------------------------------------------------

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# ----------------------
# set some pretty colors
# ----------------------
# colorize messages in the command line
set -g message-style bg=default,fg=brightred #base02
set -g message-command-style bg=black,fg=blue

# ----------------------
# Panes
# -----------------------

# set -g pane-border-style bg=colour235,fg=colour238
# set -g pane-active-border-style bg=colour235,fg=colour238
# set -g pane-active-border-style bg=colour236,fg=colour51

set -g pane-border-style bg=default,fg=black
set -g pane-active-border-style bg=default,fg=black

# ----------------------
# Status Bar
# -----------------------
set -g status on

set -g status-interval 5
set -g status-justify left
set -g status-position top
setw -g pane-border-status top
setw -g pane-border-format '-'

# set color for status bar
set -g status-style bg=default,fg=default,dim

# This is tottally out of hand, I need to find an easier way to do this
setw -g window-status-format '#{?window_bell_flag,#[fg=blue] ▴ ,#{?window_activity_flag,#[bg=default]#[fg=brightred] ▪︎ ,}}#{?window_activity_flag,,#{?window_bell_flag,, #I }}'
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow][ #W #[fg=yellow]],#W }'
setw -g window-status-style bg=default,fg=colour237

setw -g window-status-activity-style bg=default,fg=red
setw -g window-status-current-style bg=default,fg=cyan

# show session name, window & pane number, date and time on left side of
# status bar
set -g status-left-length 70
set -g status-left "#[fg=colour237][ #{?client_prefix,#[fg=colour202],#[fg=colour245]}#S #[fg=colour237]] "

# show default node version, battery status, wifi name & date time
status_node_version='#[fg=colour237][ #[fg=#649C62]#((echo "$(cat ~/.nvm/alias/default)" || node -v)) #[fg=colour237]]'
status_battery='#(battery -t -p)'
status_wifi="#[fg=colour237][ #[fg=colour243]#(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I | awk -F': ' '/ SSID/{print $2}') #[fg=colour237]]"
status_date_time="#[fg=colour237][ #[fg=colour243]%A, %d %b %Y %H:%M #[fg=colour237]]"
status_prefix="#{?client_prefix,#[fg=colour202]#(echo $(tmux show-option -gqv prefix | tr \"[:lower:]\" \"[:upper:]\" | sed 's/C-/\^/')),}"

set -g status-right-length 120
set -g status-right "${status_prefix} ${status_node_version} ${status_battery} ${status_wifi} ${status_date_time}"

